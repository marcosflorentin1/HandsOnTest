{"version":3,"sources":["./src/app/employee-table/employee-table.component.ts","./src/app/employee-table/employee-table.component.html","./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/services/employee.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit, Input } from '@angular/core';\nimport { Employee } from '../models/Employee';\r\n\n@Component({\n  selector: 'app-employee-table',\n  templateUrl: './employee-table.component.html',\n  styleUrls: ['./employee-table.component.css']\n})\nexport class EmployeeTableComponent implements OnInit {\n\n  headers = [\n    'Id',\r\n    'Name',\r\n    'ContractTypeName',\r\n    'RoleId',\r\n    'RoleName',\r\n    'RoleDescription',\r\n    'AnnualSalary'\n  ];\n  @Input() employees: Employee[];\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"employee-table\">\r\n  <table class=\"table table-striped\">\r\n    <tr>\r\n      <th *ngFor=\"let column of headers\">\r\n        {{ column }}\r\n      </th>\r\n    </tr>\r\n    <tbody>\r\n      <tr *ngFor=\"let row of employees\">\r\n        <td *ngFor=\"let column of headers\">\r\n          {{ row[column] }}\r\n        </td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\nimport { Employee } from './models/Employee';\r\nimport { EmployeeService } from './services/employee.service';\r\n\r\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'ng-employee';\n  showLoading: boolean = false;\n  employees: Employee[] = [];\n\n  constructor(\n    private employeeService: EmployeeService,\n  ) {\n    \n  }\n\n  getEmployees(id: any) {\n    this.showLoading = true;\n\n    if (id && isNaN(id)) {\n      this.employeeService.getEmployee(id)\n        .then((employee) => {\n          this.employees = [];\n\n          if (employee) {\n            this.employees.push(employee);\n          }\n\n          this.showLoading = false;\n        });\n    }\n    else {\n      this.employeeService.getEmployees()\n        .then((employees) => {\n          this.employees = employees;\n          this.showLoading = false;\n        });\n    }\n  }\n}\n","<h2>Embedded Angular App</h2>\r\n<br />\r\n<div class=\"form-inline\">\r\n  <label for=\"imputId\" class=\"form-item\">Employee Id</label>\r\n  <input type=\"text\"\r\n         #idValue\r\n         class=\"form-control form-item\"\r\n         id=\"imputId\"\r\n         placeholder=\"Enter employee Id\" />\r\n\r\n  <button type=\"button\" (click)=\"getEmployees(idValue.value)\" class=\"btn btn-primary form-item\">Get Employees</button>\r\n  <span [hidden]=\"!showLoading\" class=\"form-item\"> Loading...</span>\r\n</div>\r\n\r\n<app-employee-table [employees]=\"employees\"></app-employee-table>\r\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { EmployeeTableComponent } from './employee-table/employee-table.component';\nimport { EmployeeService } from './services/employee.service';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    EmployeeTableComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule\n  ],\n  providers: [\n    EmployeeService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http'\nimport { Employee } from '../models/Employee';\r\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EmployeeService {\n  private employeeUrl: string;\n\n  constructor(private httpClient: HttpClient) {\n    this.employeeUrl = 'http://localhost:64545/api/Employee';\n  }\n\n  getEmployees(): Promise<Employee[]> {\n    return this.httpClient.get<Employee[]>(this.employeeUrl)\n      .toPromise();\n  }\n\n  getEmployee(id): Promise<Employee> {\n    return this.httpClient.get<Employee>(this.employeeUrl + '/' + id)\n      .toPromise();\n  }\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}